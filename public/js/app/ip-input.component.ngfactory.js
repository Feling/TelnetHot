/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './ip-input.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from './telnet.service';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
var renderType_ipComponent_Host = null;
var _View_ipComponent_Host0 = (function (_super) {
    __extends(_View_ipComponent_Host0, _super);
    function _View_ipComponent_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ipComponent_Host0, renderType_ipComponent_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ipComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('app-ip', rootSelector, null);
        this._appEl_0 = new import2.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_ipComponent0(this.viewUtils, this.injector(0), this._appEl_0);
        this._ipComponent_0_4 = new import3.ipComponent(this.parentInjector.get(import8.TelnetService));
        this._appEl_0.initComponent(this._ipComponent_0_4, [], compView_0);
        compView_0.create(this._ipComponent_0_4, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_ipComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import3.ipComponent) && (0 === requestNodeIndex))) {
            return this._ipComponent_0_4;
        }
        return notFoundResult;
    };
    return _View_ipComponent_Host0;
}(import1.AppView));
function viewFactory_ipComponent_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_ipComponent_Host === null)) {
        (renderType_ipComponent_Host = viewUtils.createRenderComponentType('', 0, import9.ViewEncapsulation.None, [], {}));
    }
    return new _View_ipComponent_Host0(viewUtils, parentInjector, declarationEl);
}
export var ipComponentNgFactory = new import10.ComponentFactory('app-ip', viewFactory_ipComponent_Host0, import3.ipComponent);
var styles_ipComponent = [];
var renderType_ipComponent = null;
var _View_ipComponent0 = (function (_super) {
    __extends(_View_ipComponent0, _super);
    function _View_ipComponent0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ipComponent0, renderType_ipComponent, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ipComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'H1', null);
        this._text_1 = this.renderer.createText(this._el_0, 'TEST', null);
        this._text_2 = this.renderer.createText(parentRenderNode, '\n\n', null);
        this._el_3 = this.renderer.createElement(parentRenderNode, 'input', null);
        this._text_4 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_5 = this.renderer.createElement(parentRenderNode, 'p', null);
        this._text_6 = this.renderer.createText(this._el_5, '', null);
        this._text_7 = this.renderer.createText(parentRenderNode, '\n', null);
        this._el_8 = this.renderer.createElement(parentRenderNode, 'button', null);
        this._text_9 = this.renderer.createText(this._el_8, 'Send Ip', null);
        this._text_10 = this.renderer.createText(parentRenderNode, '\n\n', null);
        var disposable_0 = this.renderer.listen(this._el_3, 'keyup.enter', this.eventHandler(this._handle_keyup_enter_3_0.bind(this)));
        this._expr_1 = import7.UNINITIALIZED;
        var disposable_1 = this.renderer.listen(this._el_8, 'click', this.eventHandler(this._handle_click_8_0.bind(this)));
        this.init([], [
            this._el_0,
            this._text_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._text_7,
            this._el_8,
            this._text_9,
            this._text_10
        ], [
            disposable_0,
            disposable_1
        ], []);
        return null;
    };
    _View_ipComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_1 = import4.interpolate(1, '', this.context.value, '');
        if (import4.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setText(this._text_6, currVal_1);
            this._expr_1 = currVal_1;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_ipComponent0.prototype._handle_keyup_enter_3_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.onEnter(this._el_3.value) !== false);
        return (true && pd_0);
    };
    _View_ipComponent0.prototype._handle_click_8_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.sendIp() !== false);
        return (true && pd_0);
    };
    return _View_ipComponent0;
}(import1.AppView));
export function viewFactory_ipComponent0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_ipComponent === null)) {
        (renderType_ipComponent = viewUtils.createRenderComponentType('C:/Users/igork/Desktop/Telnet/assets/app/ip-input.html', 0, import9.ViewEncapsulation.None, styles_ipComponent, {}));
    }
    return new _View_ipComponent0(viewUtils, parentInjector, declarationEl);
}
