/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './logs.component';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from './telnet.service';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from '@angular/common/src/directives/ng_for';
import * as import12 from '@angular/core/src/linker/template_ref';
import * as import13 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import14 from './log.component';
import * as import15 from './log.component.ngfactory';
var renderType_LogsComponent_Host:import0.RenderComponentType = (null as any);
class _View_LogsComponent_Host0 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _LogsComponent_0_4:import3.LogsComponent;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_LogsComponent_Host0,renderType_LogsComponent_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('log-list',rootSelector,(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_LogsComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._LogsComponent_0_4 = new import3.LogsComponent(this.parentInjector.get(import8.TelnetService));
    this._appEl_0.initComponent(this._LogsComponent_0_4,[],compView_0);
    compView_0.create(this._LogsComponent_0_4,this.projectableNodes,(null as any));
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.LogsComponent) && (0 === requestNodeIndex))) { return this._LogsComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._LogsComponent_0_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_LogsComponent_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_LogsComponent_Host === (null as any))) { (renderType_LogsComponent_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,[],{})); }
  return new _View_LogsComponent_Host0(viewUtils,parentInjector,declarationEl);
}
export const LogsComponentNgFactory:import10.ComponentFactory<import3.LogsComponent> = new import10.ComponentFactory<import3.LogsComponent>('log-list',viewFactory_LogsComponent_Host0,import3.LogsComponent);
const styles_LogsComponent:any[] = [];
var renderType_LogsComponent:import0.RenderComponentType = (null as any);
class _View_LogsComponent0 extends import1.AppView<import3.LogsComponent> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _anchor_6:any;
  /*private*/ _appEl_6:import2.AppElement;
  _TemplateRef_6_5:any;
  _NgFor_6_6:import11.NgFor;
  _text_7:any;
  _text_8:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_LogsComponent0,renderType_LogsComponent,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._el_1 = this.renderer.createElement(parentRenderNode,'button',(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'Click me',(null as any));
    this._text_3 = this.renderer.createText(parentRenderNode,'\n            ',(null as any));
    this._el_4 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_4,'class','col-md-8 col-md-offset2');
    this._text_5 = this.renderer.createText(this._el_4,'\n            ',(null as any));
    this._anchor_6 = this.renderer.createTemplateAnchor(this._el_4,(null as any));
    this._appEl_6 = new import2.AppElement(6,4,this,this._anchor_6);
    this._TemplateRef_6_5 = new import12.TemplateRef_(this._appEl_6,viewFactory_LogsComponent1);
    this._NgFor_6_6 = new import11.NgFor(this._appEl_6.vcRef,this._TemplateRef_6_5,this.parentInjector.get(import13.IterableDiffers),this.ref);
    this._text_7 = this.renderer.createText(this._el_4,'\n',(null as any));
    this._text_8 = this.renderer.createText(parentRenderNode,'\n                ',(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_1,'click',this.eventHandler(this._handle_click_1_0.bind(this)));
    this._expr_1 = import7.UNINITIALIZED;
    this.init([],[
      this._text_0,
      this._el_1,
      this._text_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._anchor_6,
      this._text_7,
      this._text_8
    ]
    ,[disposable_0],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.TemplateRef) && (6 === requestNodeIndex))) { return this._TemplateRef_6_5; }
    if (((token === import11.NgFor) && (6 === requestNodeIndex))) { return this._NgFor_6_6; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    var changes:{[key: string]:import7.SimpleChange} = (null as any);
    changes = (null as any);
    const currVal_1:any = this.context.logs;
    if (import4.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this._NgFor_6_6.ngForOf = currVal_1;
      if ((changes === (null as any))) { (changes = {}); }
      changes['ngForOf'] = new import7.SimpleChange(this._expr_1,currVal_1);
      this._expr_1 = currVal_1;
    }
    if ((changes !== (null as any))) { this._NgFor_6_6.ngOnChanges(changes); }
    if (!throwOnChange) { this._NgFor_6_6.ngDoCheck(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_click_1_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.onButton()) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_LogsComponent0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.LogsComponent> {
  if ((renderType_LogsComponent === (null as any))) { (renderType_LogsComponent = viewUtils.createRenderComponentType('C:/Users/igork/Desktop/Telnet/assets/app/logs.component.ts class LogsComponent - inline template',0,import9.ViewEncapsulation.None,styles_LogsComponent,{})); }
  return new _View_LogsComponent0(viewUtils,parentInjector,declarationEl);
}
class _View_LogsComponent1 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import2.AppElement;
  _LogComponent_0_4:import14.LogComponent;
  /*private*/ _expr_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_LogsComponent1,renderType_LogsComponent,import6.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'app-log',(null as any));
    this._appEl_0 = new import2.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = import15.viewFactory_LogComponent0(this.viewUtils,this.injector(0),this._appEl_0);
    this._LogComponent_0_4 = new import14.LogComponent();
    this._appEl_0.initComponent(this._LogComponent_0_4,[],compView_0);
    compView_0.create(this._LogComponent_0_4,[],(null as any));
    this._expr_0 = import7.UNINITIALIZED;
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.LogComponent) && (0 === requestNodeIndex))) { return this._LogComponent_0_4; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = this.context.$implicit;
    if (import4.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this._LogComponent_0_4.log = currVal_0;
      this._expr_0 = currVal_0;
    }
    if (((this.numberOfChecks === 0) && !throwOnChange)) { this._LogComponent_0_4.ngOnInit(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_LogsComponent1(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  return new _View_LogsComponent1(viewUtils,parentInjector,declarationEl);
}